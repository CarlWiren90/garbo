datasource db {
  provider = "sqlite"
  url      = "file:./db.db"
}

model Company {
  id             Int     @id @default(autoincrement())
  name           String  @unique
  description    String
  /// wikidataId is primarily used to export to or import from wikidata
  wikidataId     String?
  /// Company website URL
  url            String
  industryGicsId Int

  fiscalYears  FiscalYear[]
  initiatives  Initiative[]
  goals        Goal[]
  industryGics IndustryGics @relation(fields: [industryGicsId], references: [id])
}

model IndustryGics {
  id              Int       @id @default(autoincrement())
  name            String
  sectorCode      String
  sectorName      String
  groupCode       String
  groupName       String
  industryCode    String
  industryName    String
  subIndustryCode String
  subIndustryName String
  companies       Company[]
}

model FiscalYear {
  id          Int      @id @default(autoincrement())
  year        String
  economy     Economy?
  companyId   Int
  emissionsId Int

  emissions Emissions?
  company   Company    @relation(fields: [companyId], references: [id])
}

/// Reported emissions for a specific fiscalYear
model Emissions {
  id           Int @id @default(autoincrement())
  fiscalYearId Int @unique
  scope1Id     Int @unique
  scope2Id     Int @unique
  scope3Id     Int @unique

  fiscalYear FiscalYear @relation(fields: [fiscalYearId], references: [id])
  scope1     Scope1?
  scope2     Scope2?
  scope3     Scope3?
}

model Scope1 {
  id          Int    @id @default(autoincrement())
  value       Float
  biogenic    Float?
  unit        String
  baseYear    String
  sourceId    Int
  emissionsId Int    @unique

  emissions Emissions @relation(fields: [emissionsId], references: [id])
  source    Source    @relation(fields: [sourceId], references: [id])
}

model Scope2 {
  id          Int    @id @default(autoincrement())
  value       Float
  biogenic    Float?
  unit        String
  mb          Float?
  lb          Float?
  baseYear    String
  sourceId    Int
  emissionsId Int    @unique

  emissions Emissions @relation(fields: [emissionsId], references: [id])
  source    Source    @relation(fields: [sourceId], references: [id])
}

model Scope3 {
  id          Int    @id @default(autoincrement())
  value       Float?
  biogenic    Float?
  unit        String
  baseYear    String
  sourceId    Int
  emissionsId Int    @unique

  emissions  Emissions        @relation(fields: [emissionsId], references: [id])
  categories Scope3Category[]
  source     Source           @relation(fields: [sourceId], references: [id])
}

model Scope3Category {
  id       Int    @id @default(autoincrement())
  category Int // 1-15 could be an enum but the sqlite provider does not support enums
  value    Float?
  scope3Id Int
  sourceId Int

  scope3 Scope3 @relation(fields: [scope3Id], references: [id])
  source Source @relation(fields: [sourceId], references: [id])
}

model Economy {
  id           Int    @id @default(autoincrement())
  turnover     Float
  unit         String
  employees    Int
  sourceId     Int
  fiscalYearId Int    @unique

  fiscalYear FiscalYear @relation(fields: [fiscalYearId], references: [id])
  source     Source     @relation(fields: [sourceId], references: [id])
}

model Goal {
  id          Int     @id @default(autoincrement())
  description String
  year        String?
  target      Float?
  baseYear    String
  sourceId    Int
  companyId   Int

  source  Source  @relation(fields: [sourceId], references: [id])
  company Company @relation(fields: [companyId], references: [id])
}

model Initiative {
  id          Int     @id @default(autoincrement())
  title       String
  description String
  year        String?
  scope       String
  companyId   Int
  sourceId    Int

  company Company @relation(fields: [companyId], references: [id])
  source  Source  @relation(fields: [sourceId], references: [id])
}

// IDEA: Maybe rename to metadata, since source is one of many kinds of metadata
model Source {
  id          Int      @id @default(autoincrement())
  url         String?
  comment     String?
  userId      Int
  lastUpdated DateTime @default(now()) @updatedAt

  goal           Goal[]
  initiative     Initiative[]
  economoy       Economy[]
  scope1         Scope1[]
  scope2         Scope2[]
  scope3         Scope3[]
  scope3Category Scope3Category[]
}
